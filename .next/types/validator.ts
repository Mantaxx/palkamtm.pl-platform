// This file is generated automatically by Next.js
// Do not edit this file manually
// This file validates that all pages and layouts export the correct types

import type { AppRoutes, LayoutRoutes, ParamMap, AppRouteHandlerRoutes } from "./routes.js"
import type { ResolvingMetadata, ResolvingViewport } from "next/types.js"
import type { NextRequest } from 'next/server.js'

type AppPageConfig<Route extends AppRoutes = AppRoutes> = {
  default: React.ComponentType<{ params: Promise<ParamMap[Route]> } & any> | ((props: { params: Promise<ParamMap[Route]> } & any) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}

type LayoutConfig<Route extends LayoutRoutes = LayoutRoutes> = {
  default: React.ComponentType<LayoutProps<Route>> | ((props: LayoutProps<Route>) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}

type RouteHandlerConfig<Route extends AppRouteHandlerRoutes = AppRouteHandlerRoutes> = {
  GET?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  POST?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  PUT?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  PATCH?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  DELETE?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  HEAD?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  OPTIONS?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
}


// Validate ../../app/about/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/about">> = Specific
  const handler = {} as typeof import("../../app/about/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/admin/dashboard/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/admin/dashboard">> = Specific
  const handler = {} as typeof import("../../app/admin/dashboard/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/auctions/[id]/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/auctions/[id]">> = Specific
  const handler = {} as typeof import("../../app/auctions/[id]/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/auctions/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/auctions">> = Specific
  const handler = {} as typeof import("../../app/auctions/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/auth/activate/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/auth/activate">> = Specific
  const handler = {} as typeof import("../../app/auth/activate/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/auth/check-email/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/auth/check-email">> = Specific
  const handler = {} as typeof import("../../app/auth/check-email/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/auth/signin/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/auth/signin">> = Specific
  const handler = {} as typeof import("../../app/auth/signin/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/auth/signup/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/auth/signup">> = Specific
  const handler = {} as typeof import("../../app/auth/signup/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/breeder-meetings/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/breeder-meetings">> = Specific
  const handler = {} as typeof import("../../app/breeder-meetings/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/buyer/dashboard/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/buyer/dashboard">> = Specific
  const handler = {} as typeof import("../../app/buyer/dashboard/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/champions/[id]/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/champions/[id]">> = Specific
  const handler = {} as typeof import("../../app/champions/[id]/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/champions/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/champions">> = Specific
  const handler = {} as typeof import("../../app/champions/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/champions/zlota-para/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/champions/zlota-para">> = Specific
  const handler = {} as typeof import("../../app/champions/zlota-para/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/contact/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/contact">> = Specific
  const handler = {} as typeof import("../../app/contact/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/dashboard/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/dashboard">> = Specific
  const handler = {} as typeof import("../../app/dashboard/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/heritage/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/heritage">> = Specific
  const handler = {} as typeof import("../../app/heritage/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/">> = Specific
  const handler = {} as typeof import("../../app/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/press/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/press">> = Specific
  const handler = {} as typeof import("../../app/press/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/privacy/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/privacy">> = Specific
  const handler = {} as typeof import("../../app/privacy/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/references/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/references">> = Specific
  const handler = {} as typeof import("../../app/references/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/rodo-clause/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/rodo-clause">> = Specific
  const handler = {} as typeof import("../../app/rodo-clause/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/sales-terms/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/sales-terms">> = Specific
  const handler = {} as typeof import("../../app/sales-terms/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/search/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/search">> = Specific
  const handler = {} as typeof import("../../app/search/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/seller/create-auction/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/seller/create-auction">> = Specific
  const handler = {} as typeof import("../../app/seller/create-auction/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/seller/dashboard/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/seller/dashboard">> = Specific
  const handler = {} as typeof import("../../app/seller/dashboard/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/terms/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/terms">> = Specific
  const handler = {} as typeof import("../../app/terms/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/auctions/bid/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/auctions/bid">> = Specific
  const handler = {} as typeof import("../../app/api/auctions/bid/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/auctions/create/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/auctions/create">> = Specific
  const handler = {} as typeof import("../../app/api/auctions/create/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/auth/[...nextauth]/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/auth/[...nextauth]">> = Specific
  const handler = {} as typeof import("../../app/api/auth/[...nextauth]/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/auth/activate/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/auth/activate">> = Specific
  const handler = {} as typeof import("../../app/api/auth/activate/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/auth/register/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/auth/register">> = Specific
  const handler = {} as typeof import("../../app/api/auth/register/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/auth/resend-activation/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/auth/resend-activation">> = Specific
  const handler = {} as typeof import("../../app/api/auth/resend-activation/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/auth/send-sms/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/auth/send-sms">> = Specific
  const handler = {} as typeof import("../../app/api/auth/send-sms/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/auth/verify-sms/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/auth/verify-sms">> = Specific
  const handler = {} as typeof import("../../app/api/auth/verify-sms/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/breeder-meetings/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/breeder-meetings">> = Specific
  const handler = {} as typeof import("../../app/api/breeder-meetings/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/breeder-meetings/upload/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/breeder-meetings/upload">> = Specific
  const handler = {} as typeof import("../../app/api/breeder-meetings/upload/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/champions/images/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/champions/images">> = Specific
  const handler = {} as typeof import("../../app/api/champions/images/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/payments/confirm-delivery/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/payments/confirm-delivery">> = Specific
  const handler = {} as typeof import("../../app/api/payments/confirm-delivery/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/payments/create-intent/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/payments/create-intent">> = Specific
  const handler = {} as typeof import("../../app/api/payments/create-intent/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/payments/dispute/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/payments/dispute">> = Specific
  const handler = {} as typeof import("../../app/api/payments/dispute/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/references/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/references">> = Specific
  const handler = {} as typeof import("../../app/api/references/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}





// Validate ../../app/layout.tsx
{
  type __IsExpected<Specific extends LayoutConfig<"/">> = Specific
  const handler = {} as typeof import("../../app/layout.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}
